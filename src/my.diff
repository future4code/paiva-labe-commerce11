diff --git a/src/App.js b/src/App.js
index bb84ac6..e731923 100644
--- a/src/App.js
+++ b/src/App.js
@@ -59,70 +59,70 @@ const produtos = [
     id: 1,
     name: 'Camisa Astronauta na Lua',
     value: 65.00,
-    Quantidade: 0,
+    quantidade: 1,
     imagem: 'https://d3ugyf2ht6aenh.cloudfront.net/stores/726/919/products/astronauta-7-marinho1-044c5b932931d3cb4715274607800511-640-0.png'
   },
   {
     id: 2,
     name: 'Camisa Crew Dragon',
     value: 70.00,
-    Quantidade: 0,
+    quantidade: 1,
     imagem: 'https://d3ugyf2ht6aenh.cloudfront.net/stores/726/919/products/crew1-c1fedacde9b3b7436315514752668614-640-0.png'
   },
   {
     id: 3,
     name: 'Camisa Marte',
     value: 45.00,
-    Quantidade: 0,
+    quantidade: 1,
     imagem: 'https://d3ugyf2ht6aenh.cloudfront.net/stores/726/919/products/mars-preta-0e38c87a093ada7be915254882378647-640-0.png'
   },
   {
     id: 4,
     name: "Camisa Don't Panic!",
     value: 92.00,
-    Quantidade: 0,
+    quantidade: 1,
     imagem: 'https://d3ugyf2ht6aenh.cloudfront.net/stores/726/919/products/dontpanic-marinho1-ed3ba4ec83983d65e215488117487520-640-0.png'
   },
   {
     id: 5,
     name: "Camisa Starship",
     value: 92.00,
-    Quantidade: 0,
+    quantidade: 1,
     imagem: 'https://d3ugyf2ht6aenh.cloudfront.net/stores/726/919/products/starship-mescla11-fe3af323b44b4fb98e15482331906672-640-0.png'
   },
   {
     id: 6,
     name: "Camisa Apolo 15",
     value: 100.00,
-    Quantidade: 0,
+    quantidade: 1,
     imagem: 'https://d3ugyf2ht6aenh.cloudfront.net/stores/726/919/products/branco41-43dd7cf0f797bea24416179975983654-640-0.jpg'
   },
   {
     id: 7,
     name: "Camisa Nasa",
     value: 55.00,
-    Quantidade: 0,
+    quantidade: 1,
     imagem: 'https://d3ugyf2ht6aenh.cloudfront.net/stores/726/919/products/preto21-40bc010c36902dedfb16179955713940-640-0.jpg'
   },
   {
     id: 8,
     name: "Moletom SpaceX",
     value: 150.00,
-    Quantidade: 0,
+    quantidade: 1,
     imagem: 'https://d3ugyf2ht6aenh.cloudfront.net/stores/726/919/products/mescla-spaceex1-5b842b23f17cf0b5e515908462346917-640-0.jpg'
   },
   {
     id: 9,
     name: "Moletom Astronauta",
     value: 180.00,
-    Quantidade: 0,
+    quantidade: 1,
     imagem: 'https://www.usecamisetas.com/media/product/f9a/moletom-com-capuz-astronauta-espaco-b76.jpg'
   },
   {
     id: 10,
     name: "Moletom Galáxia",
     value: 200.00,
-    Quantidade: 0,
+    quantidade: 1,
     imagem: 'https://img.elo7.com.br/product/zoom/30FC22C/blusa-galaxias-cosmos-cores-estrelas-espaco-moletom-galaxias.jpg'
   }
 ]
@@ -154,94 +154,63 @@ export default class App extends React.Component {
     })
   }
 
-  
   // FUNÇÃO DE AICIONAR AO CARRINHO \\
+  addProduto = (produtoId) => {
+    let estaNoCarrinho = false;
+    let carrinho = this.state.carrinho
+
+    //incrementa 1 unidade e verifica se já está no carrinho
+    carrinho.map((produto) => {
+      if (produto && (produtoId === produto.id)){
+          estaNoCarrinho = true;
+          produto.quantidade = (produto.quantidade) + 1
+        }
+      return null //retornando algo pra arrow function nao reclamar
+      })
+
+    //adiciona produto ao carrinho baseado no ID
+    if (!estaNoCarrinho){
+      carrinho.push(
+          produtos.find((produto) => {
+            return produto.id === produtoId ? produto : false;
+          })
+        );
+    }
+    this.setState({carrinho: carrinho})
+    localStorage.setItem("carrinho de Produtos", JSON.stringify(carrinho));
 
 
+  }
 
-  addProduto = (produtoId) => {
-    console.log(produtoId, 'tchau')
-    console.log(this.state)
+  // FUNÇÃO DE REMOVER DO CARRINHO \\
+  removeProduto = (produtoId) => {
     var novoCarrinho = this.state.carrinho;
-    let jaExiste = false;
-
-    // for (let i = 0; novoCarrinho.length; i++) {
-    //   if (produtoId === novoCarrinho[i].id) {
-    //     jaExiste = true;
-    //     novoCarrinho[i].Quantidade += 1;
-    //   }
-    // }
-
-    novoCarrinho = this.state.carrinho.map((produto) => {
-      if(produtoId === produto.id){
-        return { 
-          ...produto, 
-          Quantidade: produto.Quantidade +1
+    for (let i = 0; i < novoCarrinho.length; i++) {
+      if (produtoId === novoCarrinho[i].id) {
+        if (novoCarrinho[i].quantidade > 1) {
+          novoCarrinho[i].quantidade -= 1;
+        } else {
+          novoCarrinho.splice(i, 1);
         }
       }
-    })
-
-
-
-    if (!jaExiste) {
-      novoCarrinho.push(
-        produtos.find((produto) => {
-          return produto.id === produtoId ? produto : false;
-        })
-      );
     }
-
-    this.setState({carrinho: novoCarrinho});
-    localStorage.setItem("carrinho de Produto", JSON.stringify(novoCarrinho));
-    console.log(novoCarrinho, 'tchau')
-    // this.somaProduto(novoCarrinho);
+    this.setState({ carrinho: novoCarrinho });
+    localStorage.setItem("carrinho de Produtos", JSON.stringify(novoCarrinho)
+  );
   }
 
   componentDidMount = () => {
+    console.log('mount hehe')
     const localCarrinho = JSON.parse(
-      localStorage.getItem("carrinho de Produto")          
+      localStorage.getItem("carrinho de Produtos")          
     );
+
     if (localCarrinho){
         this.setState({carrinho: localCarrinho});
-        // this.somaProduto(localCarrinho)
-    }
-}
-
-// somaProduto = (listaProdutos) => {
-//   console.log(listaProdutos, 'oie')
-//   let soma = 0;
-//   for (let i = 0; i < listaProdutos.length; i++) {
-//     // soma += listaProdutos[i].value * listaProdutos[i].Quantidade;
-//   }
-//   this.setState({ totalProdutos: soma });
-// }
-
-removeProduto = (produtoId) => {
-  var novoCarrinho = this.state.carrinho;
-  let jaExiste = false;
-  for (let i = 0; i < novoCarrinho.length; i++) {
-    if (produtoId === novoCarrinho[i].id) {
-      jaExiste = true;
-      if (novoCarrinho[i].Quantidade > 1) {
-        novoCarrinho[i].Quantidade -= 1;
-      } else {
-        novoCarrinho.splice(i, 1);
-      }
     }
-  }
-
-  this.setState({ carrinho: novoCarrinho });
-  localStorage.setState(
-    "carrinho de Produtos",
-    JSON.stringify(this.state.carrinho)
-  );
-  this.somaProduto(novoCarrinho);
 }
 
 
-
-
-
   render() {
     return (
       <Container>
@@ -252,7 +221,6 @@ removeProduto = (produtoId) => {
           <ContainerFiltro>
 
             <Filtro
-              // lista={produtosFiltrados}
               valorMinimo={this.state.valorMinimo}
               valorMaximo={this.state.valorMaximo}
               nomeProduto={this.state.nomeProduto}
@@ -273,12 +241,12 @@ removeProduto = (produtoId) => {
             />
 
           </ContainerLoja>
-          <ContainerCarrinho>
-
-            <Carrinho />
 
+          <ContainerCarrinho>
+            <Carrinho produtosCarrinho={this.state.carrinho} removeProduto={this.removeProduto}/>
           </ContainerCarrinho>
         </ContainerProdutos>
+
         <ContainerFooter>
           <Footer />
         </ContainerFooter>
diff --git a/src/Components/Carrinho/Carrinho.js b/src/Components/Carrinho/Carrinho.js
index 3d1c964..f4ccf6b 100644
--- a/src/Components/Carrinho/Carrinho.js
+++ b/src/Components/Carrinho/Carrinho.js
@@ -1,6 +1,5 @@
 import React, { Component } from "react";
 import styled from "styled-components";
-import Produtos from "../Produtos/Produtos";
 
 const ContainerCarrinho = styled.div`
   width: 20vw;
@@ -8,15 +7,27 @@ const ContainerCarrinho = styled.div`
   padding: 10px;
 `;
 
-export default class Carrinho extends Component {
+
+export default function Carrinho(props) {
+  console.log('jaja',props.produtosCarrinho)
+  let carrinho = props.produtosCarrinho
+  let total = 0
   
-  render() {
-    return (
-      <ContainerCarrinho>
-        <h2>Carrinho:</h2>
+  carrinho.map((produto) => {
+    total += produto.quantidade * produto.value
+  })
+  return (
+    <ContainerCarrinho>
+      {carrinho.map((produto) => (
+        <div>Item: {produto.name} 
+        <p>Qtd: {produto.quantidade}</p>
+        <p>Preço: R${produto.value}</p>
+        <button onClick={ () => props.removeProduto(produto.id)}>x</button>
 
-        <p>Valor Total: {() => this.props.somaProduto}</p>
-      </ContainerCarrinho>
-    );
-  }
+        </div>
+      ))}
+        <p>Total: R${total}</p>
+    </ContainerCarrinho>
+  )
 }
+
diff --git a/src/Components/Carrinho/CarrinhoItem.js b/src/Components/Carrinho/CarrinhoItem.js
deleted file mode 100644
index e69de29..0000000
diff --git a/src/Components/Produtos/Produtos.js b/src/Components/Produtos/Produtos.js
index a11960d..b60aa9c 100644
--- a/src/Components/Produtos/Produtos.js
+++ b/src/Components/Produtos/Produtos.js
@@ -82,4 +82,4 @@ export default class Produtos extends Component {
             </ContainerProduto>
         )
     }
-}
\ No newline at end of file
+}
diff --git a/src/Components/Produtos/ProdutosCard.js b/src/Components/Produtos/ProdutosCard.js
index ff4cb6d..e1b623d 100644
--- a/src/Components/Produtos/ProdutosCard.js
+++ b/src/Components/Produtos/ProdutosCard.js
@@ -27,11 +27,6 @@ const InfoContainer = styled.div`
     justify-content: space-between;
 `
 
-const Botao = styled.div`
-    display: flex;
-    justify-content: center;
-`
-
 
 export default class ProductsCard extends React.Component {
     render() {
@@ -41,9 +36,9 @@ export default class ProductsCard extends React.Component {
                 <InfoContainer>
                     <p>{this.props.nome}</p>
                     <p>R$ {this.props.valor}</p>
-                    <button onClick={ () => this.props.addProdutoAoCarrinho(this.props.id)}>Adicionar ao Carrinho</button>
+                    <button onClick={ () => this.props.addProdutoAoCarrinho(this.props.id)}>Adiciona ao Carrinho</button>
                 </InfoContainer>
             </CardContainer>
         )
     }
-}
\ No newline at end of file
+}
diff --git a/src/aa.js b/src/aa.js
new file mode 100644
index 0000000..053536b
--- /dev/null
+++ b/src/aa.js
@@ -0,0 +1,51 @@
+    console.log(produtoId, 'tchau')
+    console.log(this.state)
+    var novoCarrinho = this.state.carrinho;
+    let jaExiste = false;
+
+    //incrementa 1 unidade
+    novoCarrinho = this.state.carrinho.map((produto) => {
+      if (produtoId === produto.id){
+        return { 
+          ...produto, 
+          Quantidade: produto.Quantidade +1
+        }
+      }
+    })
+
+
+
+    if (!jaExiste) {
+      novoCarrinho.push(
+        produtos.find((produto) => {
+          return produto.id === produtoId ? produto : false;
+        })
+      );
+    }
+
+    this.setState({carrinho: novoCarrinho});
+    localStorage.setItem("carrinho de Produto", JSON.stringify(novoCarrinho));
+    console.log(novoCarrinho, 'tchau')
+    // this.somaProduto(novoCarrinho);
+
+// ____ REMOVE PRODUTO
+
+  var novoCarrinho = this.state.carrinho;
+  for (let i = 0; i < novoCarrinho.length; i++) {
+    if (produtoId === novoCarrinho[i].id) {
+      jaExiste = true;
+      if (novoCarrinho[i].Quantidade > 1) {
+        novoCarrinho[i].Quantidade -= 1;
+      } else {
+        novoCarrinho.splice(i, 1);
+      }
+    }
+  }
+
+  this.setState({ carrinho: novoCarrinho });
+  localStorage.setState(
+    "carrinho de Produtos",
+    JSON.stringify(this.state.carrinho)
+  );
+  this.somaProduto(novoCarrinho);
+
